using System;
using System.Collections.Generic;
using System.IO;

class VePhim
{
    public int ID { get; set; }
    public List<(int hang, int cot)> GheDaDat { get; set; } = new List<(int, int)>();
}

class Program
{
    static int soHang = 7;
    static int soCot = 8;
    static bool[,] ghe = new bool[soHang, soCot];
    static List<VePhim> danhSachVe = new List<VePhim>();
    static string fileGhe = "trangthai_ghe.txt";
    static string fileVe = "danh_sach_ve.txt";
    static int idVeTiepTheo = 1;

    static void Main()
    {
        DocTrangThai();
        while (true)
        {
            Console.Clear();
            Console.WriteLine("===== QUAN LY VE PHIM =====");
            Console.WriteLine("1. Xem so do ghe");
            Console.WriteLine("2. Tao ve phim moi (dat ghe ngay)");
            Console.WriteLine("3. Xem danh sach ve phim");
            Console.WriteLine("4. Dat ghe vao ve phim");
            Console.WriteLine("5. Huy ghe trong ve phim");
            Console.WriteLine("6. Luu va Thoat");
            Console.WriteLine("===========================");
            Console.Write("Chon chuc nang (1-6): ");
            string chon = Console.ReadLine();

            switch (chon)
            {
                case "1":
                    Console.Clear();
                    HienThiGhe();
                    Console.WriteLine("\nNhan Enter de quay lai menu...");
                    Console.ReadLine();
                    break;
                case "2":
                    TaoVePhim();
                    break;
                case "3":
                    XemDanhSachVe();
                    break;
                case "4":
                    DatGhe();
                    break;
                case "5":
                    HuyGhe();
                    break;
                case "6":
                    LuuTrangThai();
                    Console.WriteLine("Da luu. Thoat chuong trinh...");
                    return;
                default:
                    Console.WriteLine("Lua chon khong hop le! Nhan Enter de thu lai...");
                    Console.ReadLine();
                    break;
            }
        }
    }

    static void HienThiGhe()
    {
        Console.WriteLine("So do ghe ([A01]: trong, [ X ]: da dat):\n");
        Console.Write("     ");
        for (int j = 0; j < soCot; j++)
        {
            Console.Write($" {j + 1:D2}  ");
        }
        Console.WriteLine("\n");

        for (int i = 0; i < soHang; i++)
        {
            char tenHang = (char)('A' + i);
            Console.Write($" {tenHang}   ");
            for (int j = 0; j < soCot; j++)
            {
                if (ghe[i, j])
                {
                    Console.ForegroundColor = ConsoleColor.Red;
                    Console.Write("[ X ] ");
                }
                else
                {
                    Console.ForegroundColor = ConsoleColor.Gray;
                    Console.Write($"[{tenHang}{j + 1:D2}] ");
                }
            }
            Console.WriteLine("\n");
        }
        Console.ResetColor();
    }

    static void TaoVePhim()
    {
        VePhim ve = new VePhim();
        ve.ID = idVeTiepTheo++;

        Console.Clear();
        HienThiGhe();
        int soLuong;
        while (true)
        {
            Console.Write("\nNhap so luong ghe muon dat: ");
            if (int.TryParse(Console.ReadLine(), out soLuong) && soLuong > 0)
                break;
            Console.WriteLine("So luong khong hop le! Moi nhap lai.");
        }

        int daDat = 0;
        while (daDat < soLuong)
        {
            Console.Write($"Nhap ma ghe thu {daDat + 1} (VD: A1): ");
            string nhap = Console.ReadLine().ToUpper();
            if (KiemTraNhapGhe(nhap, out int hang, out int cot))
            {
                if (!ghe[hang, cot])
                {
                    ghe[hang, cot] = true;
                    ve.GheDaDat.Add((hang, cot));
                    Console.WriteLine($"Da dat ghe {nhap} vao ve {ve.ID}.");
                    daDat++;
                }
                else
                {
                    Console.WriteLine($"Ghe {nhap} da duoc dat. Moi nhap lai.");
                }
            }
            else
            {
                Console.WriteLine("Dinh dang ghe khong hop le. Moi nhap lai.");
            }
        }

        danhSachVe.Add(ve);
        Console.WriteLine($"\nDa tao ve phim co ma: {ve.ID}");
        Console.WriteLine("Nhan Enter de tiep tuc...");
        Console.ReadLine();
    }

    static void XemDanhSachVe()
    {
        Console.Clear();
        if (danhSachVe.Count == 0)
        {
            Console.WriteLine("Chua co ve phim nao!");
        }
        else
        {
            Console.WriteLine("Danh sach ve phim:");
            foreach (var ve in danhSachVe)
            {
                Console.Write($"- Ve {ve.ID}: ");
                if (ve.GheDaDat.Count == 0)
                {
                    Console.WriteLine("Chua dat ghe");
                }
                else
                {
                    foreach (var g in ve.GheDaDat)
                    {
                        char hang = (char)('A' + g.hang);
                        Console.Write($"{hang}{g.cot + 1:D2} ");
                    }
                    Console.WriteLine();
                }
            }
        }
        Console.WriteLine("\nNhan Enter de quay lai menu...");
        Console.ReadLine();
    }

    static void DatGhe()
    {
        Console.Clear();
        if (danhSachVe.Count == 0)
        {
            Console.WriteLine("Chua co ve phim nao! Hay tao ve truoc.");
            Console.ReadLine();
            return;
        }

        HienThiGhe();
        VePhim ve;
        while (true)
        {
            Console.Write("\nNhap ma ve phim: ");
            if (int.TryParse(Console.ReadLine(), out int maVe))
            {
                ve = danhSachVe.Find(v => v.ID == maVe);
                if (ve != null)
                    break;
            }
            Console.WriteLine("Ma ve khong hop le! Moi nhap lai.");
        }

        while (true)
        {
            Console.Write("Nhap ma ghe muon dat (VD: A1): ");
            string nhap = Console.ReadLine().ToUpper();
            if (KiemTraNhapGhe(nhap, out int hang, out int cot))
            {
                if (!ghe[hang, cot])
                {
                    ghe[hang, cot] = true;
                    ve.GheDaDat.Add((hang, cot));
                    Console.WriteLine($"Da dat ghe {nhap} vao ve {ve.ID}!");
                    break;
                }
                else
                {
                    Console.WriteLine($"Ghe {nhap} da duoc dat! Moi nhap ghe khac.");
                }
            }
            else
            {
                Console.WriteLine("Nhap sai dinh dang ghe! Moi nhap lai.");
            }
        }
        Console.WriteLine("\nNhan Enter de tiep tuc...");
        Console.ReadLine();
    }

    static void HuyGhe()
    {
        Console.Clear();
        if (danhSachVe.Count == 0)
        {
            Console.WriteLine("Chua co ve phim nao!");
            Console.ReadLine();
            return;
        }

        VePhim ve;
        while (true)
        {
            Console.Write("Nhap ma ve phim: ");
            if (int.TryParse(Console.ReadLine(), out int maVe))
            {
                ve = danhSachVe.Find(v => v.ID == maVe);
                if (ve != null)
                    break;
            }
            Console.WriteLine("Ma ve khong hop le! Moi nhap lai.");
        }

        if (ve.GheDaDat.Count == 0)
        {
            Console.WriteLine($"Ve {ve.ID} chua dat ghe nao.");
            Console.ReadLine();
            return;
        }

        Console.WriteLine($"Cac ghe da dat trong ve {ve.ID}:");
        foreach (var g in ve.GheDaDat)
        {
            char hang = (char)('A' + g.hang);
            Console.Write($"{hang}{g.cot + 1:D2} ");
        }

        while (true)
        {
            Console.Write("\nNhap ghe muon huy (VD: A1): ");
            string nhap = Console.ReadLine().ToUpper();
            if (KiemTraNhapGhe(nhap, out int hangHuy, out int cotHuy))
            {
                var gheTrongVe = ve.GheDaDat.Find(g => g.hang == hangHuy && g.cot == cotHuy);
                if (gheTrongVe != default)
                {
                    ghe[hangHuy, cotHuy] = false;
                    ve.GheDaDat.Remove(gheTrongVe);
                    Console.WriteLine($"Da huy ghe {nhap} trong ve {ve.ID}!");
                    break;
                }
                else
                {
                    Console.WriteLine($"Ghe {nhap} khong thuoc ve {ve.ID}. Moi nhap lai.");
                }
            }
            else
            {
                Console.WriteLine("Nhap sai dinh dang ghe! Moi nhap lai.");
            }
        }

        Console.WriteLine("\nNhan Enter de tiep tuc...");
        Console.ReadLine();
    }

    static bool KiemTraNhapGhe(string nhap, out int hang, out int cot)
    {
        hang = -1; cot = -1;
        if (string.IsNullOrEmpty(nhap) || nhap.Length < 2)
            return false;
        char h = nhap[0];
        if (h < 'A' || h >= 'A' + soHang)
            return false;
        string so = nhap.Substring(1);
        if (!int.TryParse(so, out int c))
            return false;
        if (c < 1 || c > soCot)
            return false;
        hang = h - 'A';
        cot = c - 1;
        return true;
    }

    static void LuuTrangThai()
    {
        using (StreamWriter sw = new StreamWriter(fileGhe))
        {
            for (int i = 0; i < soHang; i++)
            {
                for (int j = 0; j < soCot; j++)
                {
                    sw.Write(ghe[i, j] ? "1" : "0");
                }
                sw.WriteLine();
            }
        }

        using (StreamWriter sw = new StreamWriter(fileVe))
        {
            foreach (var ve in danhSachVe)
            {
                sw.Write($"{ve.ID}:");
                foreach (var g in ve.GheDaDat)
                {
                    sw.Write($"{g.hang},{g.cot};");
                }
                sw.WriteLine();
            }
        }
    }

    static void DocTrangThai()
    {
        if (File.Exists(fileGhe))
        {
            string[] lines = File.ReadAllLines(fileGhe);
            for (int i = 0; i < Math.Min(soHang, lines.Length); i++)
            {
                for (int j = 0; j < Math.Min(soCot, lines[i].Length); j++)
                {
                    ghe[i, j] = lines[i][j] == '1';
                }
            }
        }

        if (File.Exists(fileVe))
        {
            string[] lines = File.ReadAllLines(fileVe);
            foreach (var line in lines)
            {
                var parts = line.Split(':');
                if (int.TryParse(parts[0], out int id))
                {
                    VePhim ve = new VePhim();
                    ve.ID = id;
                    if (parts.Length > 1)
                    {
                        var gheStrs = parts[1].Split(';', StringSplitOptions.RemoveEmptyEntries);
                        foreach (var gStr in gheStrs)
                        {
                            var pos = gStr.Split(',');
                            int h = int.Parse(pos[0]);
                            int c = int.Parse(pos[1]);
                            ve.GheDaDat.Add((h, c));
                        }
                    }
                    danhSachVe.Add(ve);
                    idVeTiepTheo = Math.Max(idVeTiepTheo, id + 1);
                }
            }
        }
    }
}
